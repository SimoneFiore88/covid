{"version":3,"sources":["Components/UI/Chart/Chart.js","Components/UI/Card/Card.js","Components/UI/Pie/Pie.js","Components/Home/Home.js","Components/Region/Region.js","Components/UI/Dropdown/Dropdown.js","Components/UI/Header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["am4core","am4themes_animated","commercialLicense","colors","Chart","props","console","log","data","chart","useRef","useLayoutEffect","x","am4charts","dateAxis","xAxes","push","renderer","grid","template","location","fontSize","valueAxis","yAxes","tooltip","disabled","minWidth","Object","keys","slice","forEach","el","i","series","dataFields","dateX","valueY","tooltipText","replace","toUpperCase","name","stroke","strokeWidth","getFillFromObject","background","fill","cursor","legend","current","id","className","style","width","Card","label","Intl","NumberFormat","format","value","Pie","pieSeries","category","innerRadius","radius","labels","list","slices","strokeOpacity","createChild","horizontalCenter","verticalCenter","text","position","valign","itemContainers","paddingTop","valueLabels","align","textAlign","useDefaultMarker","marker","markers","children","getIndex","cornerRadius","Home","dateUpdate","latest","toPlot","toPositivePie","Region","region","useParams","Dropdown","regions","useState","open","setOpen","onClick","xmlns","height","class","viewBox","d","to","map","Header","DateTimeFormat","year","month","day","Date","entries","App","setLatest","setDateUpdate","setToPlot","setToPositivePie","setRegions","useEffect","fetch","then","json","length","cards","Deceduti","deceduti","Guariti","dimessi_guariti","terapia_intensiva","totale_positivi","nuovi_positivi","variazione_totale_positivi","toP","pie","isolamento_domiciliare","ricoverati_con_sintomi","reg","Set","denominazione_regione","sort","basename","process","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f5e8f3a.chunk.js","sourcesContent":["import React, { useRef, useLayoutEffect } from \"react\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\n\nam4core.useTheme(am4themes_animated);\nam4core.options.commercialLicense = true;\n\nconst colors = [\"#031F4B\", \"#08396C\", \"#155B96\", \"#6497B1\", \"#B3CDE0\"];\n\nexport default function Chart(props) {\n  console.log(props.data);\n\n  const chart = useRef(null);\n\n  useLayoutEffect(() => {\n    let x = am4core.create(\"chartdiv\", am4charts.XYChart);\n\n    x.data = props.data;\n\n    let dateAxis = x.xAxes.push(new am4charts.DateAxis());\n    dateAxis.renderer.grid.template.location = 0;\n    dateAxis.fontSize = 12;\n\n    let valueAxis = x.yAxes.push(new am4charts.ValueAxis());\n    valueAxis.tooltip.disabled = true;\n    valueAxis.renderer.minWidth = 35;\n    valueAxis.fontSize = 12;\n\n    dateAxis.renderer.grid.template.disabled = true;\n    valueAxis.renderer.grid.template.disabled = true;\n\n    Object.keys(props.data[0])\n      .slice(1)\n      .forEach((el, i) => {\n        let series = x.series.push(new am4charts.LineSeries());\n        series.dataFields.dateX = \"data\";\n        series.dataFields.valueY = el;\n        series.tooltipText = `${el\n          .replace(/_/g, \" \")\n          .toUpperCase()} {valueY.value}`;\n        series.name = el;\n        series.stroke = colors[i];\n        series.strokeWidth = 2;\n        series.tooltip.getFillFromObject = false;\n        series.tooltip.background.fill = am4core.color(colors[i]);\n      });\n\n    x.cursor = new am4charts.XYCursor();\n    x.legend = new am4charts.Legend();\n\n    /* let scrollbarX = new am4charts.XYChartScrollbar();\n    scrollbarX.series.push(series);\n    x.scrollbarX = scrollbarX; */\n\n    chart.current = x;\n    /* \n    return () => {\n      x.dispose();\n    }; */\n  }, []);\n\n  // When the paddingRight prop changes it will update the chart\n  /*   useLayoutEffect(() => {\n    chart.current.paddingRight = props.paddingRight;\n  }, [props.paddingRight]); */\n\n  return (\n    <div\n      id=\"chartdiv\"\n      className=\"h-80 relative z-1\"\n      style={{ width: \"100%\" }}\n    ></div>\n  );\n}\n","export default function Card(props) {\n  return (\n    <div className=\"w-1/2 md:w-1/3 xl:w-1/6 px-2 mb-4\">\n      <div className=\" px-4 py-2 rounded-md shadow-xl border-l-4 border-blue-500 bg-white-50 hover:shadow-sm\">\n        <h2 className=\"font-bold font-ele text-lg  mb-2\">{props.label}</h2>\n        <h3 className=\"text-right font-semibold\">\n          {new Intl.NumberFormat(\"it\").format(props.value)}\n        </h3>\n      </div>\n    </div>\n  );\n}\n","import React, { useRef, useLayoutEffect } from \"react\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\n\nam4core.useTheme(am4themes_animated);\nam4core.options.commercialLicense = true;\n\nconst colors = [\"#031F4B\", \"#08396C\", \"#155B96\", \"#6497B1\", \"#B3CDE0\"];\n\nexport default function Pie(props) {\n  console.log(props.data);\n\n  const chart = useRef(null);\n\n  useLayoutEffect(() => {\n    let x = am4core.create(\"piediv\", am4charts.PieChart);\n\n    x.data = props.data;\n\n    let pieSeries = x.series.push(new am4charts.PieSeries());\n    pieSeries.dataFields.value = \"value\";\n    pieSeries.dataFields.category = \"label\";\n    pieSeries.innerRadius = am4core.percent(90);\n    pieSeries.radius = am4core.percent(100);\n    //pieSeries.ticks.template.disabled = true;\n    pieSeries.labels.template.disabled = true;\n\n    pieSeries.colors.list = [\n      am4core.color(\"#14284C\"),\n      //am4core.color(\"#193565\"),\n      //am4core.color(\"#1F427E\"),\n      am4core.color(\"#264E97\"),\n      //am4core.color(\"#2B5BB1\"),\n      //am4core.color(\"#3268CA\"),\n      am4core.color(\"#3875E3\"),\n    ];\n\n    pieSeries.slices.template.stroke = am4core.color(\"#fff\");\n    pieSeries.slices.template.strokeWidth = 2;\n    pieSeries.slices.template.strokeOpacity = 1;\n\n    let label = pieSeries.createChild(am4core.Label);\n\n    label.horizontalCenter = \"middle\";\n    label.verticalCenter = \"middle\";\n    label.fontSize = 20;\n\n    label.text = \"{values.value.sum}\";\n\n    x.legend = new am4charts.Legend();\n\n    x.legend.position = \"left\";\n    x.legend.fontSize = 12;\n    x.legend.valign = \"middle\";\n\n    x.legend.itemContainers.template.paddingTop = 0;\n\n    x.legend.valueLabels.template.align = \"left\";\n    x.legend.valueLabels.template.textAlign = \"start\";\n    x.legend.width = 200;\n\n    x.legend.useDefaultMarker = true;\n\n    let marker = x.legend.markers.template.children.getIndex(0);\n    marker.cornerRadius(12, 12, 12, 12);\n    marker.strokeWidth = 1;\n    marker.strokeOpacity = 0.2;\n    marker.stroke = am4core.color(\"#f00\");\n\n    chart.current = x;\n    /* \n    return () => {\n      x.dispose();\n    }; */\n  }, []);\n\n  // When the paddingRight prop changes it will update the chart\n  /*   useLayoutEffect(() => {\n    chart.current.paddingRight = props.paddingRight;\n  }, [props.paddingRight]); */\n\n  return <div id=\"piediv\" className=\"h-40\" style={{ width: \"100%\" }}></div>;\n}\n","import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport Chart from \"../UI/Chart/Chart\";\nimport { useEffect, useState } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport Pie from \"../UI/Pie/Pie\";\n\nexport default function Home({ dateUpdate, latest, toPlot, toPositivePie }) {\n  return (\n    <>\n      <section className=\"w-full px-2 pt-4\">\n        <div className=\"rounded-md backdrop-filter backdrop-blur-sm w-full  border-l-4 border-blue-500 bg-white-50\">\n          <h2 className=\"font-bold font-ele text-lg ml-3 py-2\">\n            Andamento nazionale\n          </h2>\n          {toPlot && <Chart data={toPlot} label={\"Andamento nazionale\"} />}\n        </div>\n      </section>\n      <section className=\"w-full md:w-1/3 px-2 pt-4\">\n        <div className=\"rounded-md backdrop-filter backdrop-blur-sm w-full  border-l-4 border-blue-500 bg-white-50\">\n          <h2 className=\"font-bold font-ele text-lg ml-3 py-2\">\n            Distribuzione positivi\n          </h2>\n          {toPositivePie && (\n            <Pie data={toPositivePie} label={\"Andamento nazionale\"} />\n          )}\n        </div>\n      </section>\n    </>\n  );\n}\n","import { useParams } from \"react-router\";\n\nexport default function Region() {\n  const { region } = useParams();\n\n  return <p> {region}</p>;\n}\n","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Dropdown({ regions }) {\n  const [open, setOpen] = useState(false);\n  return (\n    <>\n      <div\n        className=\"absolute top-4 right-2 cursor-pointer \"\n        onClick={() => setOpen(!open)}\n      >\n        <span className=\" \">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"16\"\n            fill=\"currentColor\"\n            class=\"bi bi-list\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"\n            />\n          </svg>\n        </span>\n      </div>\n      <div className=\"w-48 absolute top-10 right-2  z-50 \">\n        <div\n          className={\n            \"  px-4 py-2 rounded-md shadow-xl backdrop-filter backdrop-blur-xl border border-gray-500 \" +\n            (!open ? \"hidden\" : \"\")\n          }\n        >\n          <div className=\"h-48 overflow-scroll\" onClick={() => setOpen(false)}>\n            <ul>\n              <Link to=\"/\">Nazionale</Link>\n              {regions &&\n                regions.map((el) => {\n                  return (\n                    <li key={el}>\n                      <Link to={`/region/${el}`}>{el}</Link>\n                    </li>\n                  );\n                })}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import Card from \"../Card/Card\";\nimport Dropdown from \"../Dropdown/Dropdown\";\n\nexport default function Header(props) {\n  return (\n    <>\n      <section className=\"w-screen px-2 pt-4\">\n        <h1 className=\"text-2xl font-ele\">\n          Status al{\" \"}\n          {props.dateUpdate &&\n            new Intl.DateTimeFormat(\"it\", {\n              year: \"numeric\",\n              month: \"short\",\n              day: \"numeric\",\n            }).format(new Date(props.dateUpdate))}\n        </h1>\n        {props.regions && <Dropdown regions={props.regions} />}\n      </section>\n      <section className=\"w-screen  mt-10\">\n        <div className=\"flex flex-wrap justify-between \">\n          {props.latest\n            ? Object.entries(props.latest).map((el) => {\n                return <Card key={el[0]} label={el[0]} value={el[1]} />;\n              })\n            : \"loading\"}\n        </div>\n      </section>\n    </>\n  );\n}\n","import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\n\nimport \"./App.css\";\nimport Home from \"./Components/Home/Home\";\nimport Region from \"./Components/Region/Region\";\nimport Card from \"./Components/UI/Card/Card\";\nimport Header from \"./Components/UI/Header/Header\";\n\nfunction App() {\n  const [latest, setLatest] = useState();\n  const [dateUpdate, setDateUpdate] = useState();\n\n  const [toPlot, setToPlot] = useState();\n  const [toPositivePie, setToPositivePie] = useState();\n  const [regions, setRegions] = useState();\n\n  useEffect(() => {\n    fetch(\n      `https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-json/dpc-covid19-ita-andamento-nazionale.json`,\n    )\n      .then((data) => data.json())\n      .then((data) => {\n        console.log(data, \"dd\");\n\n        const el = data[data.length - 1];\n\n        setDateUpdate(data[data.length - 1].data);\n\n        const cards = {\n          Deceduti: el.deceduti,\n          Guariti: el.dimessi_guariti,\n          \"T. Intensiva\": el.terapia_intensiva,\n          \"Totale Positivi\": el.totale_positivi,\n          \"Nuovi Positivi\": el.nuovi_positivi,\n          \"Delta Positivi\": el.variazione_totale_positivi,\n        };\n\n        setLatest(cards);\n\n        const toP = data.map((el) => {\n          return {\n            data: new Date(el.data),\n            \"T. Intensiva\": el.terapia_intensiva,\n            //\"Nuovi Positivi\": el.nuovi_positivi,\n            //\"Delta Positivi\": el.variazione_totale_positivi,\n            //Guariti: el.dimessi_guariti,\n            Deceduti: el.deceduti,\n            \"Totale Positivi\": el.totale_positivi,\n          };\n        });\n\n        setToPlot(toP);\n\n        const pie = [\n          {\n            label: \"Terapia\",\n            value: el.terapia_intensiva,\n          },\n          {\n            label: \"Isolamento\",\n            value: el.isolamento_domiciliare,\n          },\n          {\n            label: \"Ricoverati\",\n            value: el.ricoverati_con_sintomi,\n          },\n        ];\n\n        setToPositivePie(pie);\n        console.log(el, \"PIE\");\n\n        /* const dataGenre = [\n  {\n      \"label\": \"Maschi\",\n      \"value\": entries.filter(el => el.genre === \"M\").length\n  },\n  {\n      \"label\": \"Femine\",\n      \"value\": entries.filter(el => el.genre === \"F\").length\n  }        \n] */\n      });\n  }, []);\n\n  useEffect(() => {\n    fetch(\n      \"https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-json/dpc-covid19-ita-regioni.json\",\n    )\n      .then((data) => data.json())\n      .then((data) => {\n        console.log(data);\n        const reg = [\n          ...new Set(data.map((el) => el.denominazione_regione)),\n        ].sort();\n        setRegions(reg);\n        console.log(reg);\n      });\n  }, []);\n\n  return (\n    <div className=\"min-h-screen bg-blue\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <Header dateUpdate={dateUpdate} latest={latest} regions={regions} />\n\n        <div className=\"w-screen\">\n          <div className=\"flex flex-wrap \">\n            <Switch>\n              <Route exact path=\"/\">\n                <Home toPlot={toPlot} toPositivePie={toPositivePie} />\n              </Route>\n              <Route path=\"/region/:region\">\n                <Region />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}