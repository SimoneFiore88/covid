{"version":3,"sources":["Components/UI/Chart/Chart.js","Components/UI/Card/Card.js","Components/Home/Home.js","Components/Region/Region.js","Components/UI/Header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["am4core","am4themes_animated","commercialLicense","colors","Chart","props","console","log","data","chart","useRef","useLayoutEffect","x","am4charts","xAxes","push","renderer","grid","template","location","valueAxis","yAxes","tooltip","disabled","minWidth","Object","keys","slice","forEach","el","i","series","dataFields","dateX","valueY","tooltipText","replace","toUpperCase","name","stroke","strokeWidth","cursor","legend","current","id","className","style","width","Card","label","Intl","NumberFormat","format","value","Home","dateUpdate","latest","toPlot","regions","Region","region","useParams","Header","DateTimeFormat","year","month","day","Date","entries","map","App","useState","setLatest","setDateUpdate","setToPlot","setRegions","useEffect","fetch","then","json","length","cards","Deceduti","deceduti","Guariti","dimessi_guariti","terapia_intensiva","totale_positivi","nuovi_positivi","variazione_totale_positivi","toP","reg","Set","denominazione_regione","sort","basename","process","to","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2fd1106.chunk.js","sourcesContent":["import React, { useRef, useLayoutEffect } from \"react\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\n\nam4core.useTheme(am4themes_animated);\nam4core.options.commercialLicense = true;\n\nconst colors = [\"#031F4B\", \"#08396C\", \"#155B96\", \"#6497B1\", \"#B3CDE0\"];\n\nexport default function Chart(props) {\n  console.log(props.data);\n\n  const chart = useRef(null);\n\n  useLayoutEffect(() => {\n    let x = am4core.create(\"chartdiv\", am4charts.XYChart);\n\n    x.data = props.data;\n\n    let dateAxis = x.xAxes.push(new am4charts.DateAxis());\n    dateAxis.renderer.grid.template.location = 0;\n\n    let valueAxis = x.yAxes.push(new am4charts.ValueAxis());\n    valueAxis.tooltip.disabled = true;\n    valueAxis.renderer.minWidth = 35;\n\n    Object.keys(props.data[0])\n      .slice(1)\n      .forEach((el, i) => {\n        let series = x.series.push(new am4charts.LineSeries());\n        series.dataFields.dateX = \"data\";\n        series.dataFields.valueY = el;\n        series.tooltipText = `${el\n          .replace(/_/g, \" \")\n          .toUpperCase()} {valueY.value}`;\n        series.name = el;\n        series.stroke = colors[i];\n        series.strokeWidth = 2;\n      });\n\n    x.cursor = new am4charts.XYCursor();\n    x.legend = new am4charts.Legend();\n\n    /* let scrollbarX = new am4charts.XYChartScrollbar();\n    scrollbarX.series.push(series);\n    x.scrollbarX = scrollbarX; */\n\n    chart.current = x;\n    /* \n    return () => {\n      x.dispose();\n    }; */\n  }, []);\n\n  // When the paddingRight prop changes it will update the chart\n  /*   useLayoutEffect(() => {\n    chart.current.paddingRight = props.paddingRight;\n  }, [props.paddingRight]); */\n\n  return <div id=\"chartdiv\" className=\"h-80\" style={{ width: \"100%\" }}></div>;\n}\n","export default function Card(props) {\n  return (\n    <div className=\"w-1/2 md:w-1/3 xl:w-1/6 px-2 mb-4\">\n      <div className=\" px-4 py-2 rounded-md shadow-xl backdrop-filter backdrop-blur-xl\">\n        <h2 className=\"font-bold font-ele text-lg  mb-2\">{props.label}</h2>\n        <h3 className=\"text-right font-semibold\">\n          {new Intl.NumberFormat(\"it\").format(props.value)}\n        </h3>\n      </div>\n    </div>\n  );\n}\n","import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport Chart from \"../UI/Chart/Chart\";\nimport { useEffect, useState } from \"react\";\nimport Card from \"../UI/Card/Card\";\n\nexport default function Home({ dateUpdate, latest, toPlot, regions }) {\n  return (\n    <section className=\"w-full lg:w-5/6 h-full\">\n      <div className=\"backdrop-filter backdrop-blur-xl w-full\">\n        {toPlot && <Chart data={toPlot} label={\"Andamento nazionale\"} />}\n      </div>\n    </section>\n  );\n}\n","import { useParams } from \"react-router\";\n\nexport default function Region() {\n  const { region } = useParams();\n\n  return <p> {region}</p>;\n}\n","import Card from \"../Card/Card\";\n\nexport default function Header(props) {\n  return (\n    <>\n      <section className=\"w-screen px-5 lg:px-20 pt-4\">\n        <div className=\"\">\n          <h1 className=\"text-3xl font-ele\">\n            Status al{\" \"}\n            {props.dateUpdate &&\n              new Intl.DateTimeFormat(\"it\", {\n                year: \"numeric\",\n                month: \"short\",\n                day: \"numeric\",\n              }).format(new Date(props.dateUpdate))}\n          </h1>\n        </div>\n      </section>\n      <section className=\"w-screen px-5 lg:px-20 mt-10 mx-auto\">\n        <div className=\"flex flex-wrap justify-between -m-4 \">\n          {props.latest\n            ? Object.entries(props.latest).map((el) => {\n                return <Card key={el[0]} label={el[0]} value={el[1]} />;\n              })\n            : \"loading\"}\n        </div>\n      </section>\n    </>\n  );\n}\n","import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\n\nimport \"./App.css\";\nimport Home from \"./Components/Home/Home\";\nimport Region from \"./Components/Region/Region\";\nimport Card from \"./Components/UI/Card/Card\";\nimport Header from \"./Components/UI/Header/Header\";\n\nfunction App() {\n  const [latest, setLatest] = useState();\n  const [dateUpdate, setDateUpdate] = useState();\n\n  const [toPlot, setToPlot] = useState();\n  const [regions, setRegions] = useState();\n\n  useEffect(() => {\n    fetch(\n      `https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-json/dpc-covid19-ita-andamento-nazionale.json`,\n    )\n      .then((data) => data.json())\n      .then((data) => {\n        console.log(data, \"dd\");\n\n        const el = data[data.length - 1];\n\n        setDateUpdate(data[data.length - 1].data);\n\n        const cards = {\n          Deceduti: el.deceduti,\n          Guariti: el.dimessi_guariti,\n          \"T. Intensiva\": el.terapia_intensiva,\n          \"Totale Positivi\": el.totale_positivi,\n          \"Nuovi Positivi\": el.nuovi_positivi,\n          \"Delta Positivi\": el.variazione_totale_positivi,\n        };\n\n        setLatest(cards);\n\n        const toP = data.map((el) => {\n          return {\n            data: new Date(el.data),\n            \"T. Intensiva\": el.terapia_intensiva,\n            \"Nuovi Positivi\": el.nuovi_positivi,\n            \"Delta Positivi\": el.variazione_totale_positivi,\n          };\n        });\n\n        setToPlot(toP);\n      });\n  }, []);\n\n  useEffect(() => {\n    fetch(\n      \"https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-json/dpc-covid19-ita-regioni.json\",\n    )\n      .then((data) => data.json())\n      .then((data) => {\n        console.log(data);\n        const reg = [\n          ...new Set(data.map((el) => el.denominazione_regione)),\n        ].sort();\n        setRegions(reg);\n        console.log(reg);\n      });\n  }, []);\n\n  return (\n    <div className=\"min-h-screen bg-blue\">\n      <Header dateUpdate={dateUpdate} latest={latest} />\n\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"w-screen px-5 lg:px-20 pt-4\">\n          <div className=\"flex flex-wrap \">\n            <div className=\"w-full lg:w-1/6  px-4 py-2 rounded-md shadow-xl backdrop-filter backdrop-blur-xl mb-10\">\n              <div className=\"h-36 lg:h-80 overflow-scroll\">\n                {regions &&\n                  regions.map((el) => {\n                    return (\n                      <p key={el}>\n                        <Link to={`/region/${el}`}>{el}</Link>\n                      </p>\n                    );\n                  })}\n              </div>\n            </div>\n            <Switch>\n              <Route exact path=\"/\">\n                <Home toPlot={toPlot} />\n              </Route>\n              <Route path=\"/region/:region\">\n                <Region />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}